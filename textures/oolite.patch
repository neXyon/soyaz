Index: GNUmakefile
===================================================================
--- GNUmakefile	(Revision 5701)
+++ GNUmakefile	(Arbeitskopie)
@@ -22,12 +22,12 @@
     ADDITIONAL_OBJC_LIBS         = -lglu32 -lopengl32 -lpng14.dll -lmingw32 -lSDLmain -lSDL -lSDL_mixer -lgnustep-base -l$(JS_IMPORT_LIBRARY) -lwinmm -mwindows
     ADDITIONAL_CFLAGS            = -DWIN32 -DNEED_STRLCPY `sdl-config --cflags`
 # note the vpath stuff above isn't working for me, so adding src/SDL and src/Core explicitly
-    ADDITIONAL_OBJCFLAGS         = -DLOADSAVEGUI -DWIN32 -DXP_WIN -Wno-import -std=gnu99 `sdl-config --cflags`
+    ADDITIONAL_OBJCFLAGS         = -fobjc-exceptions -DLOADSAVEGUI -DWIN32 -DXP_WIN -Wno-import -std=gnu99 `sdl-config --cflags`
     ADDITIONAL_LDFLAGS           += -Wl,--large-address-aware
     oolite_LIB_DIRS              += -L$(GNUSTEP_LOCAL_ROOT)/lib -Ldeps/Windows-x86-deps/lib -L$(JS_LIB_DIR)
     ifeq ($(ESPEAK),yes)
         ADDITIONAL_OBJC_LIBS     += -lespeak.dll
-        ADDITIONAL_OBJCFLAGS     +=-DHAVE_LIBESPEAK=1
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions-DHAVE_LIBESPEAK=1
         GNUSTEP_OBJ_DIR_NAME     := $(GNUSTEP_OBJ_DIR_NAME).spk
     endif
 else
@@ -43,7 +43,7 @@
     ADDITIONAL_INCLUDE_DIRS      = -I$(LIBJS_INC_DIR) -Isrc/SDL -Isrc/Core -Isrc/BSDCompat -Isrc/Core/Scripting -Isrc/Core/Materials -Isrc/Core/Entities -Isrc/Core/OXPVerifier -Isrc/Core/Debug -Isrc/Core/Tables
     ADDITIONAL_OBJC_LIBS         = -lGLU -lGL -lX11 -lSDL -lSDL_mixer -lgnustep-base -l$(LIBJS) `nspr-config --libs` -lstdc++
     ADDITIONAL_CFLAGS            = -Wall -DLINUX -DNEED_STRLCPY `sdl-config --cflags` `nspr-config --cflags`
-    ADDITIONAL_OBJCFLAGS         = -Wall -std=c99 -DLOADSAVEGUI -DLINUX -DXP_UNIX -Wno-import `sdl-config --cflags` `nspr-config --cflags`
+    ADDITIONAL_OBJCFLAGS         = -fobjc-exceptions -Wall -std=c99 -DLOADSAVEGUI -DLINUX -DXP_UNIX -Wno-import `sdl-config --cflags` `nspr-config --cflags`
     oolite_LIB_DIRS              += -L/usr/X11R6/lib/ -L$(LIBJS_LIB_DIR)
 
     ifeq ($(use_deps),yes)
@@ -55,34 +55,34 @@
     endif
     ifeq ($(ESPEAK),yes)
         ADDITIONAL_OBJC_LIBS     += -lespeak
-        ADDITIONAL_OBJCFLAGS     += -DHAVE_LIBESPEAK=1
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions -DHAVE_LIBESPEAK=1
         GNUSTEP_OBJ_DIR_NAME     := $(GNUSTEP_OBJ_DIR_NAME).spk
     endif
     ifeq ($(OO_JAVASCRIPT_TRACE),yes)
-        ADDITIONAL_OBJCFLAGS     += -DMOZ_TRACE_JSCALLS=1
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions -DMOZ_TRACE_JSCALLS=1
     endif
 endif
 
 ifeq ($(profile),yes)
     ADDITIONAL_CFLAGS            += -g -pg
-    ADDITIONAL_OBJCFLAGS         += -g -pg
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -g -pg
 endif
 ifeq ($(debug),yes)
     ADDITIONAL_CFLAGS            += -g -O0
-    ADDITIONAL_OBJCFLAGS         += -g -O0
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -g -O0
     GNUSTEP_OBJ_DIR_NAME         := $(GNUSTEP_OBJ_DIR_NAME).dbg
     ADDITIONAL_CFLAGS            += -DDEBUG -DOO_DEBUG -DOO_CHECK_GL_HEAVY=1
-    ADDITIONAL_OBJCFLAGS         += -DDEBUG -DOO_DEBUG -DOO_CHECK_GL_HEAVY=1
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DDEBUG -DOO_DEBUG -DOO_CHECK_GL_HEAVY=1
 endif
 
 # these are common settings for both test and deployment release configurations
 ifeq ($(NO_SHADERS),yes)
     ADDITIONAL_CFLAGS            += -DNO_SHADERS=1
-    ADDITIONAL_OBJCFLAGS         += -DNO_SHADERS=1
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DNO_SHADERS=1
 endif
 ifeq ($(FEATURE_REQUEST_5496),yes)
 	ADDITIONAL_CFLAGS += -DFEATURE_REQUEST_5496=1
-	ADDITIONAL_OBJCFLAGS += -DFEATURE_REQUEST_5496=1
+	ADDITIONAL_OBJCFLAGS += -fobjc-exceptions -DFEATURE_REQUEST_5496=1
 endif
 
 # DEPLOYMENT_RELEASE_CONFIGURATION value is passed from Makefile. Note that the deployment release settings
@@ -89,47 +89,47 @@
 # are forced, while test release settings are adjustable.
 ifeq ($(DEPLOYMENT_RELEASE_CONFIGURATION),yes)
     ADDITIONAL_CFLAGS            += -DNDEBUG
-    ADDITIONAL_OBJCFLAGS         += -DNDEBUG
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DNDEBUG
     ADDITIONAL_CFLAGS            += -DOO_CHECK_GL_HEAVY=0
-    ADDITIONAL_OBJCFLAGS         += -DOO_CHECK_GL_HEAVY=0
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DOO_CHECK_GL_HEAVY=0
     ADDITIONAL_CFLAGS            += -DOO_EXCLUDE_DEBUG_SUPPORT=1
-    ADDITIONAL_OBJCFLAGS         += -DOO_EXCLUDE_DEBUG_SUPPORT=1
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DOO_EXCLUDE_DEBUG_SUPPORT=1
     ADDITIONAL_CFLAGS            += -DOO_OXP_VERIFIER_ENABLED=0
-    ADDITIONAL_OBJCFLAGS         += -DOO_OXP_VERIFIER_ENABLED=0
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DOO_OXP_VERIFIER_ENABLED=0
     ADDITIONAL_CFLAGS            += -DOO_LOCALIZATION_TOOLS=0
-    ADDITIONAL_OBJCFLAGS         += -DOO_LOCALIZATION_TOOLS=0
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DOO_LOCALIZATION_TOOLS=0
     ADDITIONAL_CFLAGS            += -DDEBUG_GRAPHVIZ=0
-    ADDITIONAL_OBJCFLAGS         += -DDEBUG_GRAPHVIZ=0
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DDEBUG_GRAPHVIZ=0
 else
     ifeq ($(BUILD_WITH_DEBUG_FUNCTIONALITY),no)
         ADDITIONAL_CFLAGS        += -DNDEBUG
-        ADDITIONAL_OBJCFLAGS     += -DNDEBUG
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions -DNDEBUG
     endif
     ifeq ($(OO_CHECK_GL_HEAVY),yes)
         ADDITIONAL_CFLAGS        += -DOO_CHECK_GL_HEAVY=1
-        ADDITIONAL_OBJCFLAGS     += -DOO_CHECK_GL_HEAVY=1
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions -DOO_CHECK_GL_HEAVY=1
     endif
     ifeq ($(OO_EXCLUDE_DEBUG_SUPPORT),yes)
         ADDITIONAL_CFLAGS        += -DOO_EXCLUDE_DEBUG_SUPPORT=1
-        ADDITIONAL_OBJCFLAGS     += -DOO_EXCLUDE_DEBUG_SUPPORT=1
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions -DOO_EXCLUDE_DEBUG_SUPPORT=1
     endif
     ifeq ($(OO_OXP_VERIFIER_ENABLED),yes)
         ADDITIONAL_CFLAGS        += -DOO_OXP_VERIFIER_ENABLED=1
-        ADDITIONAL_OBJCFLAGS     += -DOO_OXP_VERIFIER_ENABLED=1
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions -DOO_OXP_VERIFIER_ENABLED=1
     endif
     ifeq ($(OO_LOCALIZATION_TOOLS),yes)
         ADDITIONAL_CFLAGS        += -DOO_LOCALIZATION_TOOLS=1
-        ADDITIONAL_OBJCFLAGS     += -DOO_LOCALIZATION_TOOLS=1
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions -DOO_LOCALIZATION_TOOLS=1
     endif
     ifeq ($(DEBUG_GRAPHVIZ),yes)
         ADDITIONAL_CFLAGS        += -DDEBUG_GRAPHVIZ=1
-        ADDITIONAL_OBJCFLAGS     += -DDEBUG_GRAPHVIZ=1
+        ADDITIONAL_OBJCFLAGS     += -fobjc-exceptions -DDEBUG_GRAPHVIZ=1
     endif
 endif
 
 ifeq ($(SNAPSHOT_BUILD), yes)
     ADDITIONAL_CFLAGS            += -DSNAPSHOT_BUILD -DOOLITE_SNAPSHOT_VERSION=\"$(VERSION_STRING)\"
-    ADDITIONAL_OBJCFLAGS         += -DSNAPSHOT_BUILD -DOOLITE_SNAPSHOT_VERSION=\"$(VERSION_STRING)\"
+    ADDITIONAL_OBJCFLAGS         += -fobjc-exceptions -DSNAPSHOT_BUILD -DOOLITE_SNAPSHOT_VERSION=\"$(VERSION_STRING)\"
 endif
 
 OBJC_PROGRAM_NAME = oolite
Index: src/Core/Materials/OOPNGTextureLoader.m
===================================================================
--- src/Core/Materials/OOPNGTextureLoader.m	(Revision 5701)
+++ src/Core/Materials/OOPNGTextureLoader.m	(Arbeitskopie)
@@ -31,7 +31,6 @@
 #import "OOCPUInfo.h"
 
 
-void png_error(png_structp, png_const_charp) NO_RETURN_FUNC;
 
 
 static void PNGError(png_structp png, png_const_charp message);
Index: tools/planettool/Makefile
===================================================================
--- tools/planettool/Makefile	(Revision 5701)
+++ tools/planettool/Makefile	(Arbeitskopie)
@@ -7,7 +7,7 @@
 LD = $(CC)
 
 CFLAGS = -I$(FPM_PATH) -I$(OOMATHS_PATH) -DOOMATHS_STANDALONE=1 -DPLANETTOOL_VERSION="\"$(PLANETTOOL_VERSION)\"" -g -ffast-math -I../../src/Core
-LDFLAGS = -lpng -lz
+LDFLAGS = -lpng -lz -lm
 
 
 ifeq ($(UNAME),Msys)
Index: tools/planettool/RenderToCube.c
===================================================================
--- tools/planettool/RenderToCube.c	(Revision 5701)
+++ tools/planettool/RenderToCube.c	(Arbeitskopie)
@@ -35,7 +35,7 @@
 #define SAMPLE_WIDTH				1.2f
 
 
-static bool RenderCubeFace(FloatPixMapRef pm, size_t size, unsigned xoff, unsigned yoff, Vector outVector, Vector downVector, RenderFlags flags, unsigned sampleGridSize, float *weights, SphericalPixelSourceFunction source, void *sourceContext, ProgressCallbackFunction progressCB, void *cbContext, uint8_t faceIndex);
+static bool RenderCubeFace(FloatPixMapRef pm, size_t size, unsigned xoff, unsigned yoff, Vector outVector, Vector downVector, RenderFlags flags, unsigned sampleGridSize, float *weights, SphericalPixelSourceFunction source, void *sourceContext, ProgressCallbackFunction progressCB, void *cbContext, uint8_t faceIndex, bool shiftY);
 static bool RenderCubeFaceLine(size_t lineIndex, size_t lineCount, void *vcontext);
 
 
@@ -53,17 +53,17 @@
 	
 	// Render faces:
 	// +x
-	OK = OK && RenderCubeFace(pm, size, 0, 0, kBasisXVector, vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 0, 0, kBasisXVector, vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, false);
 	// -x
-	OK = OK && RenderCubeFace(pm, size, 0, 1, vector_flip(kBasisXVector), vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 0, 1, vector_flip(kBasisXVector), vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, false);
 	// +y
-	OK = OK && RenderCubeFace(pm, size, 0, 2, kBasisYVector, kBasisZVector, flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 0, 2, kBasisYVector, kBasisZVector, flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, false);
 	// -y
-	OK = OK && RenderCubeFace(pm, size, 0, 3, vector_flip(kBasisYVector), vector_flip(kBasisZVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 0, 3, vector_flip(kBasisYVector), vector_flip(kBasisZVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, false);
 	// +z
-	OK = OK && RenderCubeFace(pm, size, 0, 4, kBasisZVector, vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 0, 4, kBasisZVector, vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, false);
 	// -z
-	OK = OK && RenderCubeFace(pm, size, 0, 5, vector_flip(kBasisZVector), vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 0, 5, vector_flip(kBasisZVector), vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, false);
 	
 	(void)faceIndex;
 	
@@ -75,7 +75,7 @@
 
 FloatPixMapRef RenderToCubeCross(uintmax_t size, RenderFlags flags, SphericalPixelSourceFunction source, void *sourceContext, ProgressCallbackFunction progress, ErrorCallbackFunction error, void *cbContext)
 {
-	FloatPixMapRef pm = ValidateAndCreatePixMap(size, size * 4, size * 3, error, cbContext);
+	FloatPixMapRef pm = ValidateAndCreatePixMap(size, size * 4, size * 4, error, cbContext);
 	if (pm == NULL)  return NULL;
 	
 	unsigned sampleGridSize = (flags & kRenderFast) ? SAMPLE_GRID_SIZE_FAST : SAMPLE_GRID_SIZE_HIGHQ;
@@ -87,17 +87,17 @@
 	
 	// Render faces:
 	// +x
-	OK = OK && RenderCubeFace(pm, size, 2, 1, kBasisXVector, vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 2, 1, kBasisXVector, vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, true);
 	// -x
-	OK = OK && RenderCubeFace(pm, size, 0, 1, vector_flip(kBasisXVector), vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 0, 1, vector_flip(kBasisXVector), vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, true);
 	// +y
-	OK = OK && RenderCubeFace(pm, size, 1, 0, kBasisYVector, kBasisZVector, flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 2, 0, kBasisYVector, kBasisXVector, flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, true);
 	// -y
-	OK = OK && RenderCubeFace(pm, size, 1, 2, vector_flip(kBasisYVector), vector_flip(kBasisZVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 2, 2, vector_flip(kBasisYVector), vector_flip(kBasisXVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, true);
 	// +z
-	OK = OK && RenderCubeFace(pm, size, 1, 1, kBasisZVector, vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 1, 1, kBasisZVector, vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, true);
 	// -z
-	OK = OK && RenderCubeFace(pm, size, 3, 1, vector_flip(kBasisZVector), vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++);
+	OK = OK && RenderCubeFace(pm, size, 3, 1, vector_flip(kBasisZVector), vector_flip(kBasisYVector), flags, sampleGridSize, weights, source, sourceContext, progress, cbContext, faceIndex++, true);
 	
 	(void)faceIndex;
 	
@@ -128,9 +128,9 @@
 } RenderCubeFaceContext;
 
 
-static bool RenderCubeFace(FloatPixMapRef pm, size_t size, unsigned xoff, unsigned yoff, Vector outVector, Vector downVector, RenderFlags flags, unsigned sampleGridSize, float *weights, SphericalPixelSourceFunction source, void *sourceContext, ProgressCallbackFunction progressCB, void *cbContext, uint8_t faceIndex)
+static bool RenderCubeFace(FloatPixMapRef pm, size_t size, unsigned xoff, unsigned yoff, Vector outVector, Vector downVector, RenderFlags flags, unsigned sampleGridSize, float *weights, SphericalPixelSourceFunction source, void *sourceContext, ProgressCallbackFunction progressCB, void *cbContext, uint8_t faceIndex, bool shiftY)
 {
-	FloatPixMapRef subPM = FPMCreateSubC(pm, size * xoff, size * yoff, size, size);
+	FloatPixMapRef subPM = FPMCreateSubC(pm, size * xoff, size * yoff + (shiftY ? size >> 1 : 0), size, size);
 	Vector rightVector = cross_product(outVector, downVector);
 	float scale = 2.0f / (float)size;
 	float fdiff = (2.0f * SAMPLE_WIDTH / (float)sampleGridSize) * scale;
